<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.ustc.USTCer"
    android:versionCode="1"
    android:versionName="1.0" >

    <uses-sdk
        android:minSdkVersion="8"
        android:targetSdkVersion="17" />
    <!-- 注意一定要在这里定义permission，之前没有定义这两个permission，以为在下面readPermission和writePermission中就相当于定义了，结果在另一个中始终访问说permission denial，检查了好久终于发现是这个问题....惨痛的教训 -->
 <!-- 
    <permission
        android:name="com.my.contentprovider.READ_DATABASE"
        android:protectionLevel="normal" >
    </permission>
    <permission
        android:name="com.my.contentprovider.WRITE_DATABASE"
        android:protectionLevel="normal" >
    </permission>
-->
    <uses-permission android:name="android.permission.INTERNET" />

    <application
        android:name="com.ustc.tabs.MyApplication"
        android:allowBackup="true"
        android:icon="@drawable/ic_launcher"
        android:label="@string/app_name"
        android:theme="@style/AppTheme" >
        <activity
            android:name="com.ustc.tabs.MainActivity"
            android:label="@string/app_name" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <!-- authorities属性的值是和我们前面在MyProvider.java文件中定义的AUTHORITY常量的值是一致的 -->
        <!-- multiprocess是一个布尔值，它表示这个Content Provider是否可以在每个客户进程中创建一个实例，这样做的目的是为了减少进程间通信的开销。这里我们为了减少不必要的内存开销，把属性multiprocess的值设置为false，使得系统只能有一个Content Provider实例存在，它运行在自己的进程中 -->
        <!-- 定义别的应用访问该content provider需要的权限 -->
      <!-- 
        <provider
            android:name="com.ustc.db.MyProvider"
            android:authorities="com.ustc.contentprovider"
            android:exported="true"
            android:multiprocess="false"
            android:readPermission="com.my.contentprovider.READ_DATABASE"
            android:writePermission="com.my.contentprovider.WRITE_DATABASE" />
      -->
    </application>

</manifest>